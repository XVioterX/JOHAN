import { toDataURL } from 'qrcode';

let handler = async (m, { text, conn }) => {
    // ุงูุชุญูู ูู ุฅุฏุฎุงู ุงููุต
    if (!text) throw `*ุงูุชุจ ููุงู ุงูู ุชุจุบุงู ูุญูู ุงูู ุจุงุฑููุฏ ๐งธ*`;

    try {
        // ุชูููุฏ ุฑูุฒ ุงูุงุณุชุฌุงุจุฉ ุงูุณุฑูุนุฉ (QR code)
        let qrCodeDataURL = await toDataURL(text.slice(0, 2048), { scale: 8 });

        // ุฅุฑุณุงู ุงูููู ุงูุฐู ูุญุชูู ุนูู ุฑูุฒ ุงูุงุณุชุฌุงุจุฉ ุงูุณุฑูุนุฉ
        await conn.sendFile(m.chat, qrCodeDataURL, 'qrcode.png', 'Here is your QR code', m);
    } catch (error) {
        // ูุนุงูุฌุฉ ุงูุฎุทุฃ ุฅุฐุง ุญุฏุซ ุฃุซูุงุก ุชูููุฏ ุฑูุฒ ุงูุงุณุชุฌุงุจุฉ ุงูุณุฑูุนุฉ
        console.error(error);
        throw '*Failed to generate QR code. Please try again later.*';
    }
};

// ูุนูููุงุช ุงููุณุงุนุฏุฉ ูุชูุถูุญ ููููุฉ ุงุณุชุฎุฏุงู ุงูุฃูุงูุฑ
handler.help = ['', 'code'].map(v => 'qr' + v + ' <text>');

// ุชุตููู ุงูุฃุฏุงุฉ ุถูู ูุฌููุนุฉ ุงูุฃุฏูุงุช
handler.tags = ['tools'];

// ุชุนุฑูู ุงูุฃูุงูุฑ ุงูููุจููุฉ ูุงูุชู ูููู ูููุณุชุฎุฏู ุฅุฏุฎุงููุง ูุชูุนูู ูุฐู ุงูุฃุฏุงุฉ
handler.command = /^qr(code)?|ููุฏ|ุจุงุฑููุฏ$/i;

export default handler;
